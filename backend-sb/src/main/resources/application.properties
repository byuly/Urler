spring.application.name=urler

# Docker Commands:
# Start only postgres and pgadmin (runing springboot through intellij):
#   docker compose up postgres pgadmin
# Start everything (postgres, pgadmin, and backend-sb in Docker):
#   docker compose up --build
# Stop all containers:
#   docker compose down

# PostgreSQL
# Connect to postgres CLI: docker exec -it postgres psql -U myuser -d urler
# pgAdmin: http://localhost:5050 (admin@localhost.com / admin)
# To connect pgadmin to postgres: Host=postgres, Port=5432, DB=urler, User=myuser, Password=secret

spring.jpa.generate-ddl=true
spring.datasource.url=jdbc:postgresql://localhost:5432/urler
spring.datasource.username=myuser
spring.datasource.password=secret

spring.jpa.hibernate.ddl-auto=update

#debugging
spring.jpa.show-sql=true

# Suppress Spring Security authentication provider warning
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR

# JWT configuration
# For production, override these with environment variables: JWT_SECRET and JWT_EXPIRATION
# The defaults below are for development only
jwt.secret=${JWT_SECRET:0a89d98541a09bf4e68b54defec837eb83c368c52cc1037a4932a923ea3ad4d809875f8b48f7be88176cf2ee4842bdaffcf568cc2c546b2669eed83804a5cb22}
jwt.expiration=${JWT_EXPIRATION:129600000}



